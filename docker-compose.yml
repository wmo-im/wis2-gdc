###############################################################################
#
# Licensed to the Apache Software Foundation (ASF) under one 
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY 
# KIND, either express or implied.  See the License for the 
# specific language governing permissions and limitations
# under the License.
#
###############################################################################

x-logging: &logging
  logging:
    driver: json-file
    options:
      mode: non-blocking
      max-buffer-size: 100m
      max-size: 10m
      max-file: 1

services:
  nginx:
    container_name: nginx
    image: nginx:alpine
    restart: always
    env_file:
      - wis2-gdc.env
    depends_on:
      - wis2-gdc-api
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx:/config
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost"]
#      interval: 5s
#      retries: 3
    networks:
      - wis2-gdc-net
    <<: *logging

  authelia:
    container_name: authelia
    image: authelia/authelia:4.38.17
    restart: always
    env_file:
      - wis2-gdc.env
    depends_on:
      - wis2-gdc-api
    volumes:
      - ./authelia:/config
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:9091"]
#      interval: 5s
#      retries: 3
    networks:
      - wis2-gdc-net
    <<: *logging

  wis2-gdc-backend:
    container_name: wis2-gdc-backend
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    restart: always
    environment:
      - discovery.type=single-node
      - discovery.seed_hosts=[]
      - node.name=elasticsearch-01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.name=es-wis2-gdc
      - xpack.security.enabled=false
    mem_limit: 1.5g
    memswap_limit: 1.5g
    volumes:
      - wis2-gdc-backend-data:/usr/share/elasticsearch/data:rw
    # ulimits:
    #   nofile:
    #     soft: 524288
    #     hard: 524288
    #   memlock:
    #     soft: -1
    #     hard: -1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 5s
      retries: 100
    networks:
      - wis2-gdc-net
    <<: *logging

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./wis2-gdc-monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - wis2-gdc-net
    <<: *logging

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    env_file:
      - wis2-gdc.env
    networks:
      - wis2-gdc-net
    volumes:
      - ./wis2-gdc-monitoring/grafana/datasource.yml:/etc/grafana/provisioning/datasources/grafana-datasource.yml
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_HIDE_VERSION=true
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_USERS_VIEWERS_CAN_EDIT=true
      - GF_UNIFIED_ALERTING_ENABLED=false
      - GF_ALERTING_ENABLED=true
      - GF_USERS_DEFAULT_THEME=dark
      - GF_DISABLE_SIGNOUT_MENU=true
      - GF_SERVER_ROOT_URL=${WIS2_GDC_API_URL}/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    <<: *logging

  wis2-gdc-broker:
    container_name: wis2-gdc-broker
    restart: always
    build:
      context: ./wis2-gdc-broker/
    env_file:
      - wis2-gdc.env
    networks:
      - wis2-gdc-net
    <<: *logging

  wis2-gdc-metrics-collector:
    container_name: wis2-gdc-metrics-collector
    restart: unless-stopped
    build:
      context: ./wis2-gdc-monitoring/metrics-collector/
    env_file:
      - wis2-gdc.env
    networks:
      - wis2-gdc-net
    depends_on:
      - wis2-gdc-broker
    <<: *logging

  wis2-gdc-management:
    container_name: wis2-gdc-management
    build:
      context: ./wis2-gdc-management/
    env_file:
      - wis2-gdc.env
    environment:
      - WIS2_GDC_API_URL_DOCKER=http://wis2-gdc-api:8080
    depends_on:
      wis2-gdc-backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://wis2-gdc-backend:9200/wis2-discovery-metadata"]
      interval: 5s
      retries: 3
    volumes:
      - wis2-gdc-management-data:/data
    restart: always
    command: ["/venv/bin/pywis-pubsub", "subscribe", "--config", "/app/docker/pywis-pubsub.yml", "--verbosity", "DEBUG"]
    networks:
      - wis2-gdc-net
    <<: *logging

  wis2-gdc-api:
    container_name: wis2-gdc-api
    build:
      context: ./wis2-gdc-api/
    depends_on:
      wis2-gdc-management:
        condition: service_healthy
    volumes:
      - wis2-gdc-management-data:/data
      - ./authelia/configuration.yml:/authelia-configuration.yml
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/conformance"]
      interval: 5s
      retries: 3
    env_file:
      - wis2-gdc.env
    restart: unless-stopped
    networks:
      - wis2-gdc-net
    <<: *logging

volumes:
  wis2-gdc-backend-data:
  wis2-gdc-management-data:

networks:
  wis2-gdc-net:
